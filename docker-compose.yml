networks:
  feast-demo-network:
    name: feast-demo-network

services:
  kafka:
    container_name: feast-demo-kafka
    image: bitnami/kafka:latest
    networks:
      - feast-demo-network
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@feast-demo-kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://feast-demo-kafka:9092
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server feast-demo-kafka:9092 --list"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "9092:9092"

  kafka-ui:
    container_name: feast-demo-kafka-ui
    image: provectuslabs/kafka-ui:latest
    networks:
      - feast-demo-network
    environment:
      - KAFKA_CLUSTERS_0_NAME=feast-demo
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=feast-demo-kafka:9092
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy

  generator:
    container_name: feast-demo-generator
    build: .
    networks:
      - feast-demo-network
    command: generator --kafka-bootstrap-servers feast-demo-kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  pipeline:
    container_name: feast-demo-pipeline
    build: .
    networks:
      - feast-demo-network
    command: pipeline --kafka-bootstrap-servers feast-demo-kafka:9092
    volumes:
      - ./src/feature_repo/data:/app/src/feature_repo/data
    depends_on:
      kafka:
        condition: service_healthy
      generator:
        condition: service_started
